  vector<bool> kidsWithCandies(vector<int>& candies, int extraCandies) {
vector<bool>v;
auto x= max_element(candies.begin(),candies.end());
    for (int i = 0; i < candies.size(); ++i) {
        if (extraCandies+candies[i]>=*x){
            v.push_back( true);
        } else
        {
            v.push_back(false);
        }
    }
    return v;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
We define a function kidsWithCandies that takes a reference to a vector of integers candies and an integer extraCandies. It returns a vector of booleans indicating whether each kid can have the maximum number of candies.

The function uses the std::max_element function from the <algorithm> library to find the maximum element in the candies vector.

We iterate through each element of the candies vector, checking if the sum of the current element and extraCandies is greater than or equal to the maximum element.

Based on the result, we push true or false into the result vector.

Finally, we return the result vector.

Finally, we return the v vector as the result of the function.
