/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head||!head->next)
        return head;
       ListNode* t;
ListNode* t2;
ListNode* cur = head;

while (cur != nullptr && cur->next != nullptr) {
    t = cur;
    t2 = cur->next;

    if (t->val == t2->val) {
        ListNode* temp = t2;
        t->next = t2->next;
        delete temp;
    } else {
        cur = cur->next; // Move to the next node only if no deletion occurred
    }
}
        return head;
    }
};
